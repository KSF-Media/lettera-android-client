/**
 * Lettera
 * KSF Media's articles service
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BlockShortcodeError {
  
  @SerializedName("errorMessage")
  private String errorMessage = null;
  @SerializedName("content")
  private String content = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getErrorMessage() {
    return errorMessage;
  }
  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getContent() {
    return content;
  }
  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockShortcodeError blockShortcodeError = (BlockShortcodeError) o;
    return (this.errorMessage == null ? blockShortcodeError.errorMessage == null : this.errorMessage.equals(blockShortcodeError.errorMessage)) &&
        (this.content == null ? blockShortcodeError.content == null : this.content.equals(blockShortcodeError.content));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.errorMessage == null ? 0: this.errorMessage.hashCode());
    result = 31 * result + (this.content == null ? 0: this.content.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockShortcodeError {\n");
    
    sb.append("  errorMessage: ").append(errorMessage).append("\n");
    sb.append("  content: ").append(content).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
